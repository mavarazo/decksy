buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.hibernate:hibernate-gradle-plugin:5.4.3.Final"
    }
}

plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id "org.sonarqube" version "2.7"
}

apply plugin: 'org.hibernate.orm'

version "0.1"
group "com.decksy"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    flatDir {
        dirs 'libs'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

ext {
    micronautDataVersion = "1.0.0.M4"
    micronautVersion = "1.2.5"
}

sonarqube {
    properties {
        property "sonar.projectKey", "mavarazo_decksy"
    }
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut.data:micronaut-data-hibernate-jpa:$micronautDataVersion", {
        exclude group:"io.micronaut.configuration", module:"micronaut-hibernate-jpa-spring"
    }

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "io.micronaut.configuration:micronaut-jdbc-hikari"

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "com.decksy.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

hibernate {
    enhance {
        enableLazyInitialization= true
        enableDirtyTracking = true
        enableAssociationManagement = true
    }
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
